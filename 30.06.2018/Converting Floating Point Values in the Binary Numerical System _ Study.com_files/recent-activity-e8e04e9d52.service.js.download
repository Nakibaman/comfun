define(["require", "exports", "angularDependency", "angularDependency"], function (require, exports, angular) {
    "use strict";
    exports.__esModule = true;
    var module = angular.module("recent-activity.service", []);
    var RecentActivityService = (function () {
        function RecentActivityService($http, $q) {
            this.activityMetaData = {
                TEXT: {
                    icon: 'article',
                    cssClass: 'lesson',
                    description: 'Lesson'
                },
                LESSON: {
                    icon: 'video_lesson',
                    cssClass: 'lesson',
                    description: 'Lesson'
                },
                VIDEO: {
                    icon: 'play',
                    cssClass: 'video',
                    description: 'Video'
                },
                COURSE: {
                    icon: 'courses',
                    cssClass: 'course',
                    description: 'Course'
                },
                ARTICLE: {
                    icon: 'document-small',
                    cssClass: 'article',
                    description: 'Article'
                },
                SCHOOL: {
                    icon: 'library',
                    cssClass: 'school',
                    description: 'School'
                },
                FORM: {
                    icon: 'list-ol',
                    cssClass: 'form-complete',
                    description: 'Form Complete'
                },
                FORM_INCOMPLETE: {
                    icon: 'warning-sign gold',
                    cssClass: 'form',
                    description: 'Form'
                },
                TEXTBOOK_COURSE: {
                    icon: 'literature',
                    cssClass: 'textbook',
                    description: 'Textbook Match'
                },
                TOPIC_EXAM: {
                    icon: 'final_exam',
                    cssClass: 'topic_exam',
                    description: 'Practice Chapter Exam'
                },
                COURSE_EXAM: {
                    icon: 'final_exam',
                    cssClass: 'course_exam',
                    description: 'Practice Final Exam'
                },
                STUDY_ANSWER: {
                    icon: 'icon_answer',
                    cssClass: 'study_answer',
                    description: 'Answer'
                }
            };
            this.MAX_ACTIVITY_COUNT_PER_REQUEST = 20;
            this.$http = $http;
            this.$q = $q;
            this.activities = [];
        }
        RecentActivityService.prototype.getActivities = function (config) {
            var offset = config.offset || 0;
            var count = Math.min(config.count, this.MAX_ACTIVITY_COUNT_PER_REQUEST);
            var withImages = !!config.withImages;
            return this.$q(function (resolve) {
                if (count + offset <= this.activities.length) {
                    resolve(this.activities.slice(offset, count + offset));
                }
                else {
                    var url = "/member/activity/getMemberActivity" + (withImages ? 'WithImages' : '') + ".ajax?count=" + count;
                    if (offset) {
                        url += "&offset=" + offset;
                    }
                    this.$http.get(url)
                        .then(function (response) {
                        var data = response.data;
                        if (data && data.length > 0) {
                            this.addActivities(data, count, offset);
                            resolve(this.activities.slice(offset, count + offset));
                        }
                        else {
                            resolve([]);
                        }
                    }.bind(this));
                }
            }.bind(this));
        };
        ;
        RecentActivityService.prototype.addActivities = function (activities, count, offset) {
            for (var o = 0; o < offset; o++) {
                if (o >= this.activities.length) {
                    this.activities.push(null);
                }
            }
            for (var c = 0; c < count; c++) {
                if (activities[c]) {
                    if (c >= this.activities.length) {
                        this.activities.push(activities[c]);
                    }
                    else if (!this.activities[offset + c].imageUri) {
                        this.activities[offset + c] = activities[c];
                    }
                }
            }
        };
        ;
        RecentActivityService.$inject = ['$http', '$q'];
        return RecentActivityService;
    }());
    exports.RecentActivityService = RecentActivityService;
    module.service("RecentActivityService", RecentActivityService);
});

//# sourceMappingURL=recent-activity.service.js.map
